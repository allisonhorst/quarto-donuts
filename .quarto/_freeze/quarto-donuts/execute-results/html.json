{
  "hash": "ea7a30fe82bb9a145dbb322f09f738ee",
  "result": {
    "markdown": "---\ntitle: \"Quarto + JS\"\nauthor: \"Allison Horst\"\ndate: \"2022-09-29\"\nformat: \n  html: \n    execute:\n      warning: false\n      message: false\n      echo: fenced\nbibliography: references.bib\n---\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n````\n:::\n\n\n## What is Quarto?\n\n| Col1 | Col2 | Col3 |\n|------|------|------|\n|      |      |      |\n|      |      |      |\n|      |      |      |\n\nFrom [Quarto.org](https://quarto.org/):\n\n> ### \"Quarto^Â®^ is an open-source scientific and technical publishing system built on [Pandoc](https://pandoc.org/)\n>\n> -   Create dynamic content with [Python](https://quarto.org/docs/computations/python.html), [R](https://quarto.org/docs/computations/r.html), [Julia](https://quarto.org/docs/computations/julia.html), and [Observable](https://quarto.org/docs/computations/ojs.html)\n>\n> -   Author documents as plain text markdown or [Jupyter](https://jupyter.org/) notebooks.\n>\n> -   Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\n>\n> -   Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\"\n\n## Get some data\n\nData from the [Fire and Tree Mortality Database](https://www.fs.usda.gov/treesearch/pubs/60342). See [metadata](https://www.fs.usda.gov/rds/archive/products/RDS-2020-0001/_metadata_RDS-2020-0001.html) for details.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\ntree_mortality <- read_csv(\"tree_mortality.csv\")\n```\n````\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# How many of each species in the dataset?\n\nunique_trees <- tree_mortality |>                          \n  group_by(Genus_species) |> \n  summarise(n = n_distinct(TreeNum))\n\n# write_csv(unique_trees, \"unique_trees.csv\")\n```\n````\n:::\n\n\n## Circle packed bubble chart of tree counts\n\n### Working in Observable, then importing:\n\nSo I went over to Observable and made [a notebook](https://observablehq.com/@allisonhorst/fire-mortality-tree-counts) where I could easily test, break, & fiddle with my visualization.\n\nUsing: [D3 Circle Packing / Bubble Chart](https://observablehq.com/@d3/bubble-chart)\n\nThen import it as expected:\n\n\n```{ojs}\nimport {chart} from \"@allisonhorst/fire-mortality-tree-counts\"\n```\n\n```{ojs}\nchart\n```\n\n\n### Or all JS in Quarto:\n\nWork in OJS cells:\n\n\n```{ojs}\ntree_data = FileAttachment(\"unique_trees.csv\").csv({typed: true})\n```\n\n```{ojs}\nBubbleChart(tree_data, {\n  label: (d) =>\n    [...d.Genus_species.split(\"_\"), d.n.toLocaleString(\"en\")].join(\"\\n\"),\n  value: (d) => d.n,\n  group: (d) => d.Genus_species.split(\"_\")[0],\n  width: 1200,\n  title: (d) =>\n    `${d.Genus_species.replace(\"_\", \" \")}\\n${d.n.toLocaleString(\"en\")}`\n})\n```\n\n```{ojs}\nimport {BubbleChart} from \"@d3/bubble-chart\"\n```\n\n\n### Interactivity maintained\n\nCopied from Mike Bostock's [Force Directed Graph](https://observablehq.com/@d3/force-directed-graph) example:\n\n\n```{ojs}\nimport {ForceGraph} from \"@d3/force-directed-graph\"\n```\n\n```{ojs}\nmiserables = FileAttachment(\"miserables.json\").json()\n```\n\n```{ojs}\nForceGraph(miserables, {\n  nodeId: d => d.id,\n  nodeGroup: d => d.group,\n  nodeTitle: d => `${d.id}\\n${d.group}`,\n  linkStrokeWidth: l => Math.sqrt(l.value),\n  width,\n  height: 600,\n  invalidation // a promise to stop the simulation when the cell is re-run\n})\n```\n\n\n## Pass values / objects between languages\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nr_val <- 10\n\nojs_define(ojs_val = r_val)\n```\n````\n:::\n\n```{ojs}\nojs_val + 12\n```\n\n\n## Other highlights\n\n-   Visual editor\n-   Multi-column organization & format customization\n\n::: column-screen\n![](images/teddy-banner.png)\n:::\n\n\n::: {.cell .column-screen-inset-shaded layout-nrow=\"1\"}\n\n````{.cell-code}\n```{{r}}\n#| column: screen-inset-shaded\n#| layout-nrow: 1\n\nggplot(data = penguins) +\n  geom_point(aes(x = flipper_length_mm,\n                 y = body_mass_g,\n                 color = species)) +\n  theme_minimal()\n\nggplot(data = penguins) +\n  geom_jitter(aes(x = species,\n                  y = bill_length_mm,\n                  color = species)) +\n  theme_minimal()\n```\n````\n\n::: {.cell-output-display}\n![](quarto-donuts_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](quarto-donuts_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\n-   Citations (incl. integration w/ Zotero) & footnotes [@waskom2017]\n\n-   Document conversions (e.g. from .qmd to .ipynb & back)[@chen2018]\n\n## Resources\n\n-   Quarto Official: [quarto.org](https://quarto.org/)\n-   Collection of Quarto creations & resources (websites, books, talks, examples, etc.): [Awesome Quarto](https://github.com/mcanouil/awesome-quarto)\n-   [\"We don't talk about Quarto\"](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/) by Alison Hill\n",
    "supporting": [
      "quarto-donuts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script type=\"ojs-define\">\n{\"contents\":[{\"name\":\"ojs_val\",\"value\":10}]}\n</script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}